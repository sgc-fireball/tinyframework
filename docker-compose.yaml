version: "3.7"

services:
  php:
    image: "tinyframework"
    build:
      context: "./"
      dockerfile: "Dockerfile"
      target: "tinyframework"
      args:
        - "_UID=${_UID:-1000}"
        - "_GID=${_GID:-1000}"
    user: "${_UID:-1000}:${_GID:-1000}"
    depends_on:
      - "mysql"
      - "redis"
      - "minio"
      - "mailpit"
      - "rabbitmq"
    ports:
      - "8000:8000" # http
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - "APP_ENV=dev"
      - "APP_DEBUG=true"
      - "REDIS_HOST=redis"
      - "DATABASE_DRIVER=mysql"
      - "BROADCAST_DRIVER=redis"
      - "CACHE_DRIVER=redis"
      - "QUEUE_DRIVER=amqp"
      - "MYSQL_HOST=mysql"
      - "MYSQL_USERNAME=tinyframework"
      - "MYSQL_PASSWORD=tinyframework"
      - "MYSQL_DATABASE=tinyframework"
      - "SMTP_HOST=mailpit"
      - "SMTP_PORT=1025"
      - "SMTP_ENCRYPTION="
      - "AMQP_HOST=rabbitmq"
      - "SWOOLE_HOST=0.0.0.0"
      - "SWOOLE_PORT=8000"
      - "AWS_ACCESS_KEY_ID=tinyframework-minio"
      - "AWS_SECRET_ACCESS_KEY=tinyframework-minio"
      - "AWS_DOMAIN=http://minio:9000"
      - "AWS_PUBLIC_DOMAIN=http://127.0.0.1:9000"
      - "AWS_REGION=local"
      - "AWS_BUCKET_PUBLIC=tinyframework-public"
      - "AWS_BUCKET_PRIVATE=tinyframework-private"
      - "FTP_BUCKET=tinyframework-ftp"
    volumes:
      - "./:/app"
      - "./storage/:/app/src/Files/storage"
    networks:
      - "tinyframework"

  mysql:
    image: "mariadb:10.5"
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_DATABASE=tinyframework"
      - "MYSQL_USER=tinyframework"
      - "MYSQL_PASSWORD=tinyframework"
    ports:
      - "3306:3306" # mysql
    healthcheck:
      test: [ "CMD", "mysqlcheck", "-h", "localhost", "-P", "3306", "-u", "tinyframework", "-ptinyframework", "tinyframework" ]
      interval: "30s"
      timeout: "5s"
      retries: 60
    volumes:
      - "data-mysql:/var/lib/mysql:rw"
    networks:
      - "tinyframework"

  mailpit:
    image: "axllent/mailpit:latest"
    ports:
      - "1025:1025" # smtp
      - "8025:8025" # http
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "/dev/null", "http://127.0.0.1:8025/" ]
      interval: "30s"
      timeout: "5s"
      retries: 60
    networks:
      - "tinyframework"

  redis:
    image: "redis:4.0.14-alpine3.9"
    ports:
      - "6379:6379" # redis
    healthcheck:
      test: [ "CMD", "redis-cli", "PING" ]
      interval: "30s"
      timeout: "5s"
      retries: 60
    volumes:
      - "data-redis:/data:rw"
    networks:
      - "tinyframework"

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5671:5671" # amqps
      - "5672:5672" # amqp
      - "15672:15672" # http
    volumes:
      - "data-rabbitmq:/var/lib/rabbitmq:rw"
    networks:
      - "tinyframework"

  minio:
    image: "quay.io/minio/minio:latest"
    command:
      - "server"
      - "/data"
      - "--console-address=:9090"
      - "--ftp=address=:21"
      - "--ftp=passive-port-range=30000-30100"
    ports:
      - "21:21"
      - "30000-30100:30000-30100"
      - "9000:9000"
      - "9090:9090"
    environment:
      - "MINIO_SERVER_HOST=tinyframework"
      - "MINIO_ROOT_USER=miniouser"
      - "MINIO_ROOT_PASSWORD=miniopass"
    volumes:
      - "data-minio:/data/:rw"
    networks:
      - "tinyframework"

  ready_minio:
    image: "quay.io/minio/mc:latest"
    environment:
      - "MINIO_SERVER_HOST=tinyframework"
      - "MINIO_ROOT_USER=miniouser"
      - "MINIO_ROOT_PASSWORD=miniopass"
      - "AWS_ACCESS_KEY_ID=tinyframework-minio"
      - "AWS_SECRET_ACCESS_KEY=tinyframework-minio"
      - "AWS_DOMAIN=http://minio:9000"
      - "AWS_PUBLIC_DOMAIN=http://127.0.0.1:9000"
      - "AWS_REGION=local"
      - "AWS_BUCKET_PUBLIC=tinyframework-public"
      - "AWS_BUCKET_PRIVATE=tinyframework-private"
      - "FTP_BUCKET=tinyframework-ftp"
    volumes:
      - ".docker/minio/ready_entrypoint.sh:/ready_entrypoint.sh:ro"
    entrypoint: "/ready_entrypoint.sh"
    depends_on:
      - "minio"
    networks:
      - "tinyframework"

  sftp:
    image: "atmoz/sftp"
    command: "tinyframework:tinyframework:${_UID:-1000}:${_GID:-1000}:tinyframework"
    networks:
      - "tinyframework"

volumes:
  data-mysql:
    driver: "local"
  data-redis:
    driver: "local"
  data-rabbitmq:
    driver: "local"
  data-minio:
    driver: "local"

networks:
  tinyframework:
    driver: "bridge"
    name: "tinyframework"
