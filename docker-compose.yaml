version: "3.7"

services:
  php:
    image: "tinyframework"
    build:
      context: "./"
      dockerfile: "Dockerfile"
      args:
        - "_UID=${_UID:-1000}"
        - "_GID=${_GID:-1000}"
    user: "${_UID:-1000}:${_GID:-1000}"










    depends_on:
      - "mysql"
      - "redis"
      - "mailhog"
      - "rabbitmq"
    ports:
      - "8000:8000" # http
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - "APP_ENV=dev"
      - "APP_DEBUG=true"
      - "REDIS_HOST=redis"
      - "DATABASE_DRIVER=mysql"
      - "BROADCAST_DRIVER=redis"
      - "CACHE_DRIVER=redis"
      - "QUEUE_DRIVER=amqp"
      - "MYSQL_HOST=mysql"
      - "MYSQL_USERNAME=tinyframework"
      - "MYSQL_PASSWORD=tinyframework"
      - "MYSQL_DATABASE=tinyframework"
      - "SMTP_HOST=mailhog"
      - "SMTP_PORT=1025"
      - "SMTP_ENCRYPTION="
      - "AMQP_HOST=rabbitmq"
      - "SWOOLE_HOST=0.0.0.0"
      - "SWOOLE_PORT=8000"
    volumes:
      - "./:/app"
      - "./storage/:/app/src/Files/storage"
    networks:
      - "tinyframework"

  mysql:
    image: "mariadb:10.5"
    environment:
      - "MYSQL_ROOT_PASSWORD=root"
      - "MYSQL_DATABASE=tinyframework"
      - "MYSQL_USER=tinyframework"
      - "MYSQL_PASSWORD=tinyframework"
    ports:
      - "3306:3306" # mysql
    healthcheck:
      test: [ "CMD", "mysqlcheck", "-h", "localhost", "-P", "3306", "-u", "shopware", "-pshopware", "shopware" ]
      interval: "30s"
      timeout: "5s"
      retries: 60
    volumes:
      - "data-mysql:/var/lib/mysql:rw"
    networks:
      - "tinyframework"

  mailhog:
    image: "mailhog/mailhog:latest"
    ports:
      - "1025:1025" # smtp
      - "8025:8025" # http
    healthcheck:
      test: [ "CMD", "wget", "-q", "-O", "/dev/null", "http://127.0.0.1:8025/" ]
      interval: "30s"
      timeout: "5s"
      retries: 60
    networks:
      - "tinyframework"

  redis:
    image: "redis:4.0.14-alpine3.9"
    ports:
      - "6379:6379" # redis
    healthcheck:
      test: [ "CMD", "redis-cli", "PING" ]
      interval: "30s"
      timeout: "5s"
      retries: 60
    volumes:
      - "data-redis:/data:rw"
    networks:
      - "tinyframework"

  rabbitmq:
    image: "rabbitmq:3-management"
    ports:
      - "5671:5671" # amqps
      - "5672:5672" # amqp
      - "15672:15672" # http
    volumes:
      - "data-rabbitmq:/var/lib/rabbitmq:rw"
    networks:
      - "tinyframework"

#  postgres:
#    image: postgres:11
#    environment:
#      - POSTGRES_USER=sonar
#      - POSTGRES_PASSWORD=sonar
#      - POSTGRES_DB=sonar
#      - PGDATA=/var/lib/postgresql/data/pgdata
#    volumes:
#      - data-postgres:/var/lib/postgresql/data
#    ports:
#      - "5432:5432" # postgres

#  sonarqube:
#    image: sonarqube:9-community
#    ports:
#      - 9000:9000 # https
#    environment:
#      - "JAVA_OPTIONS=-XX:+UseCompressedOops -XX:StringTableSize=1000003 -Xss16m -Xms2g -Xmx2g -Duser.language=de -Duser.country=DE"
#      - SONAR_JDBC_URL=sonar
#      - SONAR_JDBC_URL=sonar
#      - SONAR_JDBC_URL=jdbc:postgresql://postgres/sonar
#    volumes:
#      - data-sonarqube-data:/opt/sonarqube/data
#    networks:
#      - tinyframework
#    stop_grace_period: 300s

volumes:
  data-mysql:
    driver: "local"
  data-redis:
    driver: "local"
  data-rabbitmq:
    driver: "local"
  data-sonarqube-data:
    driver: "local"
  data-postgres:
    driver: "local"

networks:
  tinyframework:
    driver: "bridge"
    name: "tinyframework"
